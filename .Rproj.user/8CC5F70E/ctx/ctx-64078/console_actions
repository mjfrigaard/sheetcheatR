{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "  cyan + yellow + patchwork::plot_layout(ncol = 2)",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "cyan <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "yellow <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'dotdensity', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "both_dotplots <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot' + method = 'dotdensity' (binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "  cyan | yellow / both_dotplots + patchwork::plot_layout(ncol = 2)",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "  cyan + yellow / both_dotplots + patchwork::plot_layout(ncol = 2)",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "  both_dotplots / cyan + yellow  + patchwork::plot_layout(ncol = 2)",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "   cyan | yellow  / both_dotplots",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "   cyan / yellow  | both_dotplots",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "cyan <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 0.9) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "yellow <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 0.9) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'dotdensity', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "both_dotplots <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 0.9) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 0.9) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot' + method = 'dotdensity' (binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "   cyan / yellow  | both_dotplots",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "cyan <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 0.7) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "yellow <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 0.7) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'dotdensity', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "both_dotplots <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot' + method = 'dotdensity' (binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "   cyan / yellow  | both_dotplots",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "cyan <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 0.8) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "yellow <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 0.8) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'dotdensity', binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "both_dotplots <- ggplot(data = mpg, mapping = aes(x = hwy)) +",
        "+ ",
        "  geom_dotplot(method = \"histodot\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#00ffff\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  geom_dotplot(method = \"dotdensity\",",
        "+ ",
        "    binwidth = 0.6, fill = \"#ffd319\", alpha = 1/2, dotsize = 1.3) +",
        "+ ",
        "  scale_y_continuous(NULL, breaks = NULL) +",
        "+ ",
        "  labs(title = \"method = 'histodot' + method = 'dotdensity' (binwidth = 0.6\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "compare_dot_bin_methods <- function() {",
        "+ ",
        "   cyan / yellow  | both_dotplots",
        "+ ",
        "}",
        "> ",
        "compare_dot_bin_methods()",
        "> ",
        "rmarkdown::shiny_prerendered_clean(\"inst/tutorials/ggp2-01/ggp2-01.Rmd\")",
        "> ",
        "unlink(\"inst/tutorials/ggp2-01/ggp2-01_cache\", recursive = TRUE)",
        "> ",
        "usethis::use_r(\"ggp2_p1\")",
        "\u001B[32m✔\u001B[39m Setting active project to \u001B[34m'/Users/mjfrigaard/Dropbox/@projects/high-priority/@r-packages/sheetcheatR'\u001B[39m\n\u001B[31m•\u001B[39m Modify \u001B[34m'R/ggp2_p1.R'\u001B[39m\n\u001B[31m•\u001B[39m Call \u001B[90m`use_test()`\u001B[39m to create a matching test file\n",
        "> ",
        "small_labs <- theme(plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "  plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "  plot.title.position = \"panel\")",
        "> ",
        "penguins <- palmerpenguins::penguins",
        "> ",
        "data_ranges <- data.frame(",
        "+ ",
        "  # add/subtract three years to either side of date",
        "+ ",
        "  x = c(min(economics$date) - 1095, max(economics$date) + 1095),",
        "+ ",
        "  # add/subtract 20% from unemploy",
        "+ ",
        "  y = c(min(economics$unemploy) * .80, max(economics$unemploy) * 1.20)",
        "+ ",
        ")",
        "> ",
        "# plot with x/y using data values",
        "> ",
        "gg_a <- ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  labs(title = \"orginal data\", subtitle = \" \") +",
        "+ ",
        "  small_labs",
        "> ",
        "# plot with x/y using data_ranges",
        "> ",
        "gg_blnk <- ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_blank(data = data_ranges, aes(x = x, y = y)) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"geom_blank(data = data_ranges, aes(x = x, y = y))\",",
        "+ ",
        "    subtitle = \"data_ranges <- data.frame(x = c('1964-07-01', '2018-03-31'),",
        "+ ",
        "                          y = c(2148, 18422.4))\"",
        "+ ",
        "  ) +",
        "+ ",
        "  small_labs",
        "> ",
        "show_geom_blanks <- function() {",
        "+ ",
        "  gg_a / gg_blnk",
        "+ ",
        "}",
        "> ",
        "show_geom_blanks",
        "function() {\n  gg_a / gg_blnk\n}\n",
        "> ",
        "show_geom_blanks()",
        "\nRestarting R session...\n\n",
        "* The project may be out of sync -- use `renv::status()` for more details.\n",
        "> ",
        "rmarkdown::shiny_prerendered_clean(\"inst/tutorials/ggp2-01/ggp2-01.Rmd\")",
        "> ",
        "unlink(\"inst/tutorials/ggp2-01/ggp2-01_cache\", recursive = TRUE)",
        "> ",
        "devtools::install_github(\"csgillespie/roxygen2Comment\")",
        "Downloading GitHub repo csgillespie/roxygen2Comment@HEAD\n",
        "  \r   checking for file ‘/private/var/folders/0x/x5wkbhmx0k74tncn9swz7xpr0000gn/T/RtmpNNLIsO/remotes290323245b72/csgillespie-roxygen2Comment-fa3e370/DESCRIPTION’ ...\r  \r\u001B[32m✔\u001B[39m  \u001B[38;5;247mchecking for file ‘/private/var/folders/0x/x5wkbhmx0k74tncn9swz7xpr0000gn/T/RtmpNNLIsO/remotes290323245b72/csgillespie-roxygen2Comment-fa3e370/DESCRIPTION’\u001B[39m\u001B[36m\u001B[36m (343ms)\u001B[36m\u001B[39m\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mpreparing ‘roxygen2Comment’:\u001B[39m\u001B[36m\u001B[39m\n\r  \r   checking DESCRIPTION meta-information ...",
        "\r  \r\u001B[32m✔\u001B[39m  \u001B[38;5;247mchecking DESCRIPTION meta-information\u001B[39m\u001B[36m\u001B[39m\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mchecking for LF line-endings in source and make files and shell scripts\u001B[39m\u001B[36m\u001B[39m\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mchecking for empty or unneeded directories\u001B[39m\u001B[36m\u001B[39m\n   Omitted ‘LazyData’ from DESCRIPTION\n\r  \r\u001B[38;5;247m─\u001B[39m\u001B[38;5;247m  \u001B[39m\u001B[38;5;247mbuilding ‘roxygen2Comment_0.1.1.tar.gz’\u001B[39m\u001B[36m\u001B[39m\n\r  \r   \n\r",
        "Installing package into ‘/Users/mjfrigaard/Library/Caches/org.R-project.R/R/renv/library/sheetcheatR-1a45f101/R-4.1/x86_64-apple-darwin17.0’\n(as ‘lib’ is unspecified)\n",
        "* installing *source* package ‘roxygen2Comment’ ...\n** using staged installation\n",
        "** R\n",
        "** inst\n",
        "** byte-compile and prepare package for lazy loading\n",
        "** help\n",
        "*** installing help indices\n",
        "** building package indices\n",
        "** testing if installed package can be loaded from temporary location\n",
        "** testing if installed package can be loaded from final location\n",
        "** testing if installed package keeps a record of temporary installation path\n",
        "* DONE (roxygen2Comment)\n",
        "> ",
        "library(roxygen2Comment)",
        "> ",
        "# packages ----------------------------------------------------------------",
        "> ",
        "library(learnr)",
        "> ",
        "library(tidyverse)",
        "── \u001B[1mAttaching packages\u001B[22m ─────────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.2.\u001B[31m9000\u001B[39m ──\n\u001B[32m✔\u001B[39m \u001B[34mggplot2  \u001B[39m 3.3.6     \u001B[32m✔\u001B[39m \u001B[34mdplyr    \u001B[39m 1.0.9\n\u001B[32m✔\u001B[39m \u001B[34mtibble   \u001B[39m 3.1.8     \u001B[32m✔\u001B[39m \u001B[34mstringr  \u001B[39m 1.4.1\n\u001B[32m✔\u001B[39m \u001B[34mtidyr    \u001B[39m 1.2.0     \u001B[32m✔\u001B[39m \u001B[34mforcats  \u001B[39m 0.5.2\n\u001B[32m✔\u001B[39m \u001B[34mreadr    \u001B[39m 2.1.2     \u001B[32m✔\u001B[39m \u001B[34mlubridate\u001B[39m 1.8.0\n\u001B[32m✔\u001B[39m \u001B[34mpurrr    \u001B[39m 0.3.4     \n",
        "── \u001B[1mConflicts\u001B[22m ─────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mfilter()\u001B[39m masks \u001B[34mstats\u001B[39m::filter()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mlag()\u001B[39m    masks \u001B[34mstats\u001B[39m::lag()\n",
        "> ",
        "library(skimr)",
        "> ",
        "library(knitr)",
        "> ",
        "library(vroom)",
        "> ",
        "library(faux)",
        "\n************\nWelcome to faux. For support and examples visit:\nhttps://debruine.github.io/faux/\n- Get and set global package options with: faux_options()\n************\n",
        "\nAttaching package: ‘faux’\n\n",
        "The following object is masked from ‘package:purrr’:\n\n    %||%\n\n",
        "> ",
        "library(patchwork)",
        "> ",
        "library(palmerpenguins)",
        "> ",
        "",
        "> ",
        "penguins <- palmerpenguins::penguins",
        "> ",
        "",
        "> ",
        "theme(",
        "+ ",
        "  plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "  plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "  plot.title.position = \"panel\"",
        "+ ",
        ")",
        "List of 3\n $ plot.title         :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : num 8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.title.position: chr \"panel\"\n $ plot.subtitle      :List of 11\n  ..$ family       : NULL\n  ..$ face         ",
        ": chr \"italic\"\n  ..$ colour       : NULL\n  ..$ size         : num 7\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n",
        "> ",
        "",
        "> ",
        "# GRAPHICAL PRIMITIVES  ---------------------------------------------------",
        "> ",
        "## graph a solution ----",
        "> ",
        "ggplot(",
        "+ ",
        "  data = economics, # data",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "## geom_blank --------------------------------------------------------------",
        "> ",
        "### data_ranges -----",
        "> ",
        "data_ranges <- data.frame(",
        "+ ",
        "  # add/subtract three years to either side of date",
        "+ ",
        "  x = c(min(economics$date) - 1095, max(economics$date) + 1095),",
        "+ ",
        "  # add/subtract 20% from unemploy",
        "+ ",
        "  y = c(min(economics$unemploy) * .80, max(economics$unemploy) * 1.20)",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "## geom_blank-solution -----",
        "> ",
        "ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_blank(data = data_ranges, aes(x = x, y = y))",
        "> ",
        "",
        "> ",
        "## show_geom_blanks --------",
        "> ",
        "data_ranges <- data.frame(",
        "+ ",
        "  # add/subtract three years to either side of date",
        "+ ",
        "  x = c(min(economics$date) - 1095, max(economics$date) + 1095),",
        "+ ",
        "  # add/subtract 20% from unemploy",
        "+ ",
        "  y = c(min(economics$unemploy) * .80, max(economics$unemploy) * 1.20)",
        "+ ",
        ")",
        "> ",
        "# plot with x/y using data values",
        "> ",
        "gg_a <- ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  labs(title = \"orginal data: geom_point()\", subtitle = \" \") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "# plot with x/y using data_ranges",
        "> ",
        "gg_blnk <- ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_blank(data = data_ranges, aes(x = x, y = y)) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"geom_blank(data = data_ranges, aes(x = x, y = y))\",",
        "+ ",
        "    subtitle = \"data_ranges <- data.frame(x = c('1964-07-01', '2018-03-31'),",
        "+ ",
        "                          y = c(2148, 18422.4))\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "show_geom_blanks <- function() {",
        "+ ",
        "  gg_a / gg_blnk",
        "+ ",
        "}",
        "> ",
        "show_geom_blanks",
        "function() {\n  gg_a / gg_blnk\n}\n",
        "> ",
        "",
        "> ",
        "## expand_limits -----------------------------------------------------------",
        "> ",
        "## x/y limits ----",
        "> ",
        "x_limits <- c(min(economics$date) - 1095, max(economics$date) + 1095)",
        "> ",
        "y_limits <- c(max(economics$unemploy) * .80, max(economics$unemploy) * 1.20)",
        "> ",
        "## expand_limits-solution ------",
        "> ",
        "ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  expand_limits(",
        "+ ",
        "    # add limits",
        "+ ",
        "    x = x_limits,",
        "+ ",
        "    y = y_limits",
        "+ ",
        "  )",
        "> ",
        "",
        "> ",
        "gg_exp_lmt <- ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  expand_limits(",
        "+ ",
        "    # add limits",
        "+ ",
        "    x = x_limits,",
        "+ ",
        "    y = y_limits",
        "+ ",
        "  ) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"expand_limits(x = c('1964-07-01', '2018-03-31'),",
        "+ ",
        "                           y = c(12281.6, 18422.4)\",",
        "+ ",
        "    subtitle = \" \"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\"",
        "+ ",
        "  )",
        "> ",
        "show_expand_limits <- function() {",
        "+ ",
        "  gg_exp_lmt / gg_blnk | gg_a",
        "+ ",
        "}",
        "> ",
        "show_expand_limits()",
        "> ",
        "class(gg_a)",
        "[1] \"gg\"     \"ggplot\"\n",
        "> ",
        "str(gg_a)",
        "List of 9\n $ data       : spec_tbl_df [574 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n  ..$ date    : Date[1:574], format: \"1967-07-01\" \"1967-08-01\" \"1967-09-01\" \"1967-10-01\" ...\n  ..$ pce     : num [1:574] 507 510 516 512 517 ...\n  ..$ pop     : num [1:574] 198712 198911 199113 199311 199498 ...\n  ..$ psavert : num [1:574] 12.6 12.6 11.9 12.9 12.8 11.8 11.7 12.3 11.7 12.3 ...\n  ..$ uempmed : num [1:574] 4.5 4.7 4.6 4.9 4.7 4.8 5.1 4.5 4.1 4.6 ...\n  ..$ unemploy: num [1:574] 2944 2945 2958 3143 3066 ...\n",
        " $ layers     :List of 1\n  ..$ :Classes 'LayerInstance', 'Layer', 'ggproto', 'gg' <ggproto object: Class LayerInstance, Layer, gg>\n    aes_params: list\n    compute_aesthetics: function\n    compute_geom_1: function\n    compute_geom_2: function\n    compute_position: function\n    compute_statistic: function\n    computed_geom_params: list\n    computed_mapping: uneval\n    computed_stat_params: list\n    data: waiver\n    draw_geom: function\n    finish_statistics: function\n    geom: <ggproto object: Class GeomPoint, Geom, gg>\n        aesthetics: function\n        default_aes: uneval\n        draw_group: function\n        draw_key: function\n        draw_layer: function\n        draw_panel: function\n        extra_params: na.rm\n        handle_na: function\n        non_missing_aes: size shape colour\n        optional_aes: \n        parameters: function\n        required_aes: x y\n        setup_data: function\n        setup_params: function\n        use_defaults: function\n        super:  <ggproto object: Class Geom, gg>\n    geom_params: list\n    inherit.aes: TRUE\n    layer_data: function\n    map_statistic: function\n    mapping: NULL\n    position: <ggproto object: Class PositionIdentity, Position, gg>\n        compute_layer: function\n        compute_panel: function\n        required_aes: \n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Position, gg>\n    print: function\n    setup_layer: function\n    show.legend: NA\n    stat: <ggproto object: Class StatIdentity, Stat, gg>\n        aesthetics: function\n        compute_group: function\n        compute_layer: function\n        compute_panel: function\n        default_aes: uneval\n        extra_params: na.rm\n        finish_layer: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        required_aes: \n        retransform: TRUE\n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Stat, gg>\n    stat_params: list\n    super:  <ggproto object: Class Layer, gg> ",
        "\n $ scales     :Classes 'ScalesList', 'ggproto', 'gg' <ggproto object: Class ScalesList, gg>\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  <ggproto object: Class ScalesList, gg> \n $ mapping    :List of 2\n  ..$ x: language ~date\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n  ..$ y: language ~unemploy\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> ",
        "\n  ..- attr(*, \"class\")= chr \"uneval\"\n $ theme      :List of 3\n  ..$ plot.title         :List of 11\n  .. ..$ family       : NULL\n  .. ..$ face         : chr \"bold\"\n  .. ..$ colour       : NULL\n  .. ..$ size         : num 8\n  .. ..$ hjust        : NULL\n  .. ..$ vjust        : NULL\n  .. ..$ angle        : NULL\n  .. ..$ lineheight   : NULL\n  .. ..$ margin       : NULL\n  .. ..$ debug        : NULL\n  .. ..$ inherit.blank: logi FALSE\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n  ..$ plot.title.position",
        ": chr \"panel\"\n  ..$ plot.subtitle      :List of 11\n  .. ..$ family       : NULL\n  .. ..$ face         : chr \"italic\"\n  .. ..$ colour       : NULL\n  .. ..$ size         : num 7\n  .. ..$ hjust        : NULL\n  .. ..$ vjust        : NULL\n  .. ..$ angle        : NULL\n  .. ..$ lineheight   : NULL\n  .. ..$ margin       : NULL\n  .. ..$ debug        : NULL\n  .. ..$ inherit.blank: logi FALSE\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n  ..- attr(*, \"complete\")= logi FALSE\n  ..- attr(*, \"validate\")= logi ",
        "TRUE\n $ coordinates:Classes 'CoordCartesian', 'Coord', 'ggproto', 'gg' <ggproto object: Class CoordCartesian, Coord, gg>\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  <ggproto object: Class CoordCartesian, Coord, gg> ",
        "\n $ facet      :Classes 'FacetNull', 'Facet', 'ggproto', 'gg' <ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg> \n $ plot_env   ",
        ":<environment: R_GlobalEnv> \n $ labels     :List of 4\n  ..$ title   : chr \"orginal data: geom_point()\"\n  ..$ subtitle: chr \" \"\n  ..$ x       : chr \"date\"\n  ..$ y       : chr \"unemploy\"\n - attr(*, \"class\")= chr [1:2] \"gg\" \"ggplot\"\n",
        "> ",
        "typeof(gg_a)",
        "[1] \"list\"\n",
        "> ",
        "unclass(gg_a)",
        "$data\n\u001B[38;5;246m# A tibble: 574 × 6\u001B[39m\n   date         pce    pop psavert uempmed unemploy\n   \u001B[3m\u001B[38;5;246m<date>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m 1967-07-01  507. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m8\u001B[24m712    12.6     4.5     \u001B[4m2\u001B[24m944\n\u001B[38;5;250m 2\u001B[39m 1967-08-01  510. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m8\u001B[24m911    12.6     4.7     \u001B[4m2\u001B[24m945\n\u001B[38;5;250m 3\u001B[39m 1967-09-01  516. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m113    11.9     4.6     \u001B[4m2\u001B[24m958\n",
        "\u001B[38;5;250m 4\u001B[39m 1967-10-01  512. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m311    12.9     4.9     \u001B[4m3\u001B[24m143\n\u001B[38;5;250m 5\u001B[39m 1967-11-01  517. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m498    12.8     4.7     \u001B[4m3\u001B[24m066\n\u001B[38;5;250m 6\u001B[39m 1967-12-01  525. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m657    11.8     4.8     \u001B[4m3\u001B[24m018\n\u001B[38;5;250m 7\u001B[39m 1968-01-01  531. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m808    11.7     5.1     \u001B[4m2\u001B[24m878\n\u001B[38;5;250m 8\u001B[39m 1968-02-01  534. \u001B[4m1\u001B[24m\u001B[4m9\u001B[24m\u001B[4m9\u001B[24m920    12.3     4.5     \u001B[4m3\u001B[24m001\n",
        "\u001B[38;5;250m 9\u001B[39m 1968-03-01  544. \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m056    11.7     4.1     \u001B[4m2\u001B[24m877\n\u001B[38;5;250m10\u001B[39m 1968-04-01  544  \u001B[4m2\u001B[24m\u001B[4m0\u001B[24m\u001B[4m0\u001B[24m208    12.3     4.6     \u001B[4m2\u001B[24m709\n\u001B[38;5;246m# … with 564 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n\n$layers\n$layers[[1]]\ngeom_point: na.rm = FALSE\nstat_identity: na.rm = FALSE\nposition_identity \n\n\n$scales\n<ggproto object: Class ScalesList, gg>\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  <ggproto object: Class ScalesList, gg>",
        "\n\n$mapping\nAesthetic mapping: \n* `x` -> `date`\n* `y` -> `unemploy`\n\n$theme\n$theme$plot.title\nList of 11\n $ family       : NULL\n $ face         : chr \"bold\"\n $ colour       : NULL\n $ size         : num 8\n $ hjust        : NULL\n $ vjust        : NULL\n $ angle        : NULL\n $ lineheight   : NULL\n $ margin       : NULL\n $ debug        : NULL\n $ inherit.blank: logi FALSE\n - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n\n$theme$plot.title.position\n[1] \"panel\"\n\n$theme$plot.subtitle\nList of 11\n $ family       ",
        ": NULL\n $ face         : chr \"italic\"\n $ colour       : NULL\n $ size         : num 7\n $ hjust        : NULL\n $ vjust        : NULL\n $ angle        : NULL\n $ lineheight   : NULL\n $ margin       : NULL\n $ debug        : NULL\n $ inherit.blank: logi FALSE\n - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n\nattr(,\"complete\")\n[1] FALSE\nattr(,\"validate\")\n[1] TRUE\n\n$coordinates\n<ggproto object: Class CoordCartesian, Coord, gg>\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  <ggproto object: Class CoordCartesian, Coord, gg>",
        "\n\n$facet\n<ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg>\n\n$plot_env\n<environment: R_GlobalEnv>\n\n$labels\n$labels$title\n[1]",
        " \"orginal data: geom_point()\"\n\n$labels$subtitle\n[1] \" \"\n\n$labels$x\n[1] \"date\"\n\n$labels$y\n[1] \"unemploy\"\n\n\n",
        "> ",
        "names(unclass(gg_a))",
        "[1] \"data\"        \"layers\"      \"scales\"      \"mapping\"     \"theme\"       \"coordinates\" \"facet\"       \"plot_env\"    \"labels\"     \n",
        "> ",
        "names(str(gg_a))",
        "List of 9\n $ data       : spec_tbl_df [574 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n  ..$ date    : Date[1:574], format: \"1967-07-01\" \"1967-08-01\" \"1967-09-01\" \"1967-10-01\" ...\n  ..$ pce     : num [1:574] 507 510 516 512 517 ...\n  ..$ pop     : num [1:574] 198712 198911 199113 199311 199498 ...\n  ..$ psavert : num [1:574] 12.6 12.6 11.9 12.9 12.8 11.8 11.7 12.3 11.7 12.3 ...\n  ..$ uempmed : num [1:574] 4.5 4.7 4.6 4.9 4.7 4.8 5.1 4.5 4.1 4.6 ...\n  ..$ unemploy: num [1:574] 2944 2945 2958 3143 3066 ...\n",
        " $ layers     :List of 1\n  ..$ :Classes 'LayerInstance', 'Layer', 'ggproto', 'gg' <ggproto object: Class LayerInstance, Layer, gg>\n    aes_params: list\n    compute_aesthetics: function\n    compute_geom_1: function\n    compute_geom_2: function\n    compute_position: function\n    compute_statistic: function\n    computed_geom_params: list\n    computed_mapping: uneval\n    computed_stat_params: list\n    data: waiver\n    draw_geom: function\n    finish_statistics: function\n    geom: <ggproto object: Class GeomPoint, Geom, gg>\n        aesthetics: function\n        default_aes: uneval\n        draw_group: function\n        draw_key: function\n        draw_layer: function\n        draw_panel: function\n        extra_params: na.rm\n        handle_na: function\n        non_missing_aes: size shape colour\n        optional_aes: \n        parameters: function\n        required_aes: x y\n        setup_data: function\n        setup_params: function\n        use_defaults: function\n        super:  <ggproto object: Class Geom, gg>\n    geom_params: list\n    inherit.aes: TRUE\n    layer_data: function\n    map_statistic: function\n    mapping: NULL\n    position: <ggproto object: Class PositionIdentity, Position, gg>\n        compute_layer: function\n        compute_panel: function\n        required_aes: \n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Position, gg>\n    print: function\n    setup_layer: function\n    show.legend: NA\n    stat: <ggproto object: Class StatIdentity, Stat, gg>\n        aesthetics: function\n        compute_group: function\n        compute_layer: function\n        compute_panel: function\n        default_aes: uneval\n        extra_params: na.rm\n        finish_layer: function\n        non_missing_aes: \n        optional_aes: \n        parameters: function\n        required_aes: \n        retransform: TRUE\n        setup_data: function\n        setup_params: function\n        super:  <ggproto object: Class Stat, gg>\n    stat_params: list\n    super:  <ggproto object: Class Layer, gg> ",
        "\n $ scales     :Classes 'ScalesList', 'ggproto', 'gg' <ggproto object: Class ScalesList, gg>\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  <ggproto object: Class ScalesList, gg> \n $ mapping    :List of 2\n  ..$ x: language ~date\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> \n  ..$ y: language ~unemploy\n  .. ..- attr(*, \".Environment\")=<environment: R_GlobalEnv> ",
        "\n  ..- attr(*, \"class\")= chr \"uneval\"\n $ theme      :List of 3\n  ..$ plot.title         :List of 11\n  .. ..$ family       : NULL\n  .. ..$ face         : chr \"bold\"\n  .. ..$ colour       : NULL\n  .. ..$ size         : num 8\n  .. ..$ hjust        : NULL\n  .. ..$ vjust        : NULL\n  .. ..$ angle        : NULL\n  .. ..$ lineheight   : NULL\n  .. ..$ margin       : NULL\n  .. ..$ debug        : NULL\n  .. ..$ inherit.blank: logi FALSE\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n  ..$ plot.title.position",
        ": chr \"panel\"\n  ..$ plot.subtitle      :List of 11\n  .. ..$ family       : NULL\n  .. ..$ face         : chr \"italic\"\n  .. ..$ colour       : NULL\n  .. ..$ size         : num 7\n  .. ..$ hjust        : NULL\n  .. ..$ vjust        : NULL\n  .. ..$ angle        : NULL\n  .. ..$ lineheight   : NULL\n  .. ..$ margin       : NULL\n  .. ..$ debug        : NULL\n  .. ..$ inherit.blank: logi FALSE\n  .. ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n  ..- attr(*, \"complete\")= logi FALSE\n  ..- attr(*, \"validate\")= logi ",
        "TRUE\n $ coordinates:Classes 'CoordCartesian', 'Coord', 'ggproto', 'gg' <ggproto object: Class CoordCartesian, Coord, gg>\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  <ggproto object: Class CoordCartesian, Coord, gg> ",
        "\n $ facet      :Classes 'FacetNull', 'Facet', 'ggproto', 'gg' <ggproto object: Class FacetNull, Facet, gg>\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  <ggproto object: Class FacetNull, Facet, gg> \n $ plot_env   ",
        ":<environment: R_GlobalEnv> \n $ labels     :List of 4\n  ..$ title   : chr \"orginal data: geom_point()\"\n  ..$ subtitle: chr \" \"\n  ..$ x       : chr \"date\"\n  ..$ y       : chr \"unemploy\"\n - attr(*, \"class\")= chr [1:2] \"gg\" \"ggplot\"\nNULL\n",
        "> ",
        "names(unclass(gg_a))",
        "[1] \"data\"        \"layers\"      \"scales\"      \"mapping\"     \"theme\"       \"coordinates\" \"facet\"       \"plot_env\"    \"labels\"     \n",
        "> ",
        "dput(class(gg_a))",
        "c(\"gg\", \"ggplot\")\n",
        "> ",
        "(class(gg_a)",
        "+ ",
        "class(gg_a)",
        "Error: unexpected symbol in:\n\"(class(gg_a)\nclass\"\n",
        "> ",
        "",
        "> ",
        "class(gg_a)",
        "[1] \"gg\"     \"ggplot\"\n",
        "> ",
        "ggplot(",
        "+ ",
        "  data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)) +",
        "+ ",
        "  ",
        "+ ",
        "  geom_polygon(mapping = aes(alpha = 50), show.legend = FALSE)",
        "> ",
        "# add/subtract three years to either side of date",
        "> ",
        "date_limits <- c(min(economics$date) - 1095, max(economics$date) + 1095)",
        "> ",
        "# add/subtract 20% from unemploy",
        "> ",
        "unemploy_limits <- c(min(economics$unemploy) * .80, max(economics$unemploy) * 1.20)",
        "> ",
        "",
        "> ",
        "ggplot(data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "    geom_blank(aes(x = date_limits, y = unemploy_limits))",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;251m`check_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Aesthetics must be either length 1 or the same as the data (574): x and y\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "date_limits",
        "[1] \"1964-07-01\" \"2018-03-31\"\n",
        "> ",
        "## geom_blank --------------------------------------------------------------",
        "> ",
        "# add/subtract three years to either side of date",
        "> ",
        "date_limits <- c(x = min(economics$date) - 1095, max(economics$date) + 1095)",
        "> ",
        "date_limits",
        "           x              \n\"1964-07-01\" \"2018-03-31\" \n",
        "> ",
        "# add/subtract 20% from unemploy",
        "> ",
        "unemploy_limits <- c(y = min(economics$unemploy) * .80, max(economics$unemploy) * 1.20)",
        "> ",
        "ggplot(data = economics,",
        "+ ",
        "  mapping = aes(x = date, y = unemploy)) +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "    geom_blank(aes(x = date_limits, y = unemploy_limits))",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;251m`check_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Aesthetics must be either length 1 or the same as the data (574): x and y\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "mod_coeffs <- coef(lm(bill_length_mm ~ flipper_length_mm, ",
        "+ ",
        "                  data = penguins))",
        "> ",
        "mod_coeffs",
        "      (Intercept) flipper_length_mm \n       -7.2648678         0.2547682 \n",
        "> ",
        "names(mod_coeffs)",
        "[1] \"(Intercept)\"       \"flipper_length_mm\"\n",
        "> ",
        "mod_coeffs[\"(Intercept)\"]",
        "(Intercept) \n  -7.264868 \n",
        "> ",
        "mod_coeffs[\"flipper_length_mm\"]",
        "flipper_length_mm \n        0.2547682 \n",
        "> ",
        "ggplot(",
        "+ ",
        "  data = penguins,",
        "+ ",
        "  mapping = aes(x = flipper_length_mm, y = bill_length_mm)",
        "+ ",
        ") +",
        "+ ",
        "  geom_point() +",
        "+ ",
        "  geom_abline(aes(intercept = mod_coeffs[\"(Intercept)\"], ",
        "+ ",
        "                  slope = mod_coeffs[\"flipper_length_mm\"]))",
        "Warning message:\n",
        "Removed 2 rows containing missing values (geom_point). \n",
        "> ",
        "## show_ablines ----",
        "> ",
        "gg_penguins_abline <- ggplot(data = penguins,",
        "+ ",
        "  mapping = aes(x = flipper_length_mm, y = bill_length_mm)) +",
        "+ ",
        "    geom_point(size = 0.4) +",
        "+ ",
        "    geom_abline(aes(intercept = -7.2648678, slope = 0.2547682)) +",
        "+ ",
        "    labs(",
        "+ ",
        "      title = \"geom_abline(",
        "+ ",
        "                  aes(intercept = -7.2648678, slope = 0.2547682))\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"bold.italic\"),",
        "+ ",
        "    plot.title.position = \"panel\")",
        "> ",
        "",
        "> ",
        "gg_penguins_smooth <- ggplot(data = penguins,",
        "+ ",
        "  mapping = aes(x = flipper_length_mm, y = bill_length_mm)) +",
        "+ ",
        "    geom_point(size = 0.4) +",
        "+ ",
        "    geom_smooth(method = \"lm\") +",
        "+ ",
        "    labs(title = \"geom_smooth(method = 'lm')\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"bold.italic\"),",
        "+ ",
        "    plot.title.position = \"panel\")",
        "> ",
        "",
        "> ",
        "show_ablines <- function() {",
        "+ ",
        "  gg_penguins_abline / gg_penguins_smooth",
        "+ ",
        "}",
        "> ",
        "show_ablines()",
        "`geom_smooth()` using formula 'y ~ x'\n",
        "Warning messages:\n",
        "1: Removed 2 rows containing missing values (geom_point). \n",
        "2: Removed 2 rows containing non-finite values (stat_smooth). \n",
        "3: Removed 2 rows containing missing values (geom_point). \n",
        "> ",
        "gg_abline <- ggplot(data = seals,",
        "+ ",
        "  mapping = aes(x = long, y = lat)) +",
        "+ ",
        "  geom_abline(aes(intercept = 0, slope = 1), size = 0.2) +",
        "+ ",
        "  labs(title = \"geom_abline()\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\")",
        "> ",
        "",
        "> ",
        "gg_hline <- ggplot(data = seals,",
        "+ ",
        "  mapping = aes(x = long, y = lat)) +",
        "+ ",
        "  geom_hline(aes(yintercept = lat), size = 0.2) +",
        "+ ",
        "  labs(title = \"geom_hline()\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\")",
        "> ",
        "",
        "> ",
        "gg_vline <- ggplot(data = seals,",
        "+ ",
        "  mapping = aes(x = long, y = lat)) +",
        "+ ",
        "  geom_vline(aes(xintercept = long), size = 0.2) +",
        "+ ",
        "  labs(title = \"geom_vline()\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\")",
        "> ",
        "",
        "> ",
        "gg_segment <- ggplot(data = seals,",
        "+ ",
        "  mapping = aes(x = long, y = lat)) +",
        "+ ",
        "  geom_segment(aes(yend = lat + 1, xend = long + 1), size = 0.2) +",
        "+ ",
        "  labs(title = \"geom_segment()\") +",
        "+ ",
        "  theme(",
        "+ ",
        "    plot.title = element_text(size = 8, face = \"bold\"),",
        "+ ",
        "    plot.subtitle = element_text(size = 7, face = \"italic\"),",
        "+ ",
        "    plot.title.position = \"panel\")",
        "> ",
        "",
        "> ",
        "show_lines <- function() {",
        "+ ",
        "  gg_abline + gg_hline + gg_vline + gg_segment + patchwork::plot_layout(ncol = 2)",
        "+ ",
        "}",
        "> ",
        "show_lines()",
        "> ",
        "unlink(\"inst/tutorials/ggp2-01/ggp2-01_cache\", recursive = TRUE)",
        "> ",
        "rmarkdown::shiny_prerendered_clean(\"inst/tutorials/ggp2-01/ggp2-01.Rmd\")",
        "\nRestarting R session...\n\n"
    ]
}